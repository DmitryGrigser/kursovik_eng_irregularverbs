Федеральное государственное бюджетное образовательное учреждение высшего образования
«Сибирский государственный университет телекоммуникаций и информатики»












КУРСОВОЙ ПРОЕКТ
по дисциплине: технологии разработки программного обеспечения
на тему: «Irregular verbs»





Проверил:
Пудов С.Г.

Выполнили:
студенты 2 курса группы ЗП-51
Григорьев Д.С.
Смородин М.А.
Дуванова М.Н.



Новосибирск 2016
Содержание



1.	Введение………………………………………………………………………….….....3
2.	Техническое задание...……..…….……………………………………….…….…..…4
a.	Требования к приложению……………………………………………………4
b.	Алгоритм работы………………………………………………………………4
3.	Руководство пользователя…...………………………………………………………..5
4.	Тесты……………………………………………………………………………………6
5.	Проделанная студентом работа……………………………………………………….7
6.	Заключение……………………………………………………………………………..8

























1.	Введение

Технология разработки программного обеспечения (ПО) представляет собой комплекс организационных мер, операций и приемов, направленных на разработку программных продуктов высокого качества в рамках отведенного бюджета и в срок. 
Технологии включают методики, методологии, средства и процедуры разработки ПО.
В рамках нашего курсового проекта будут использоваться инструменты разработки Git и GitHub.
Git — это набор утилит командной строки, которые позволяют отслеживать и записывать изменения в файлах. Чаще всего это относится к файлам с исходным кодом. С его помощью можно восстанавливать старые версии проекта, сравнивать, анализировать, объединять изменения и делать многое другое. Все эти действия можно назвать термином «контроль версий». 
GitHub —веб-сервис для хостинга IT-проектов и их совместной разработки. Основан на системе контроля версий Git. Хо́стинг (англ. hosting) — услуга по предоставлению ресурсов для размещения информации на сервере, постоянно находящемся в сети (обычно Интернет). Создатели сайта называют GitHub «социальной сетью для разработчиков». Кроме размещения кода, участники могут общаться, комментировать правки друг друга, а также следить за новостями знакомых. С помощью широких возможностей Git программисты могут объединять свои репозитории — GitHub предлагает удобный интерфейс для этого и может отображать вклад каждого участника в виде дерева. Для проектов есть личные страницы, небольшие Вики и система отслеживания ошибок. Прямо на сайте можно просмотреть файлы проектов с подсветкой синтаксиса для большинства языков программирования. На платных тарифных планах можно создавать приватные репозитории, доступные ограниченному кругу пользователей.














3
2.	Техническое задание

Разработать приложение для проверки знания неправильных глаголов английского языка. 
1.	Написать код программы, который будет сравнивать введённое слов с клавиатуры с словами, записанными в БД. (1 день.)
2.	Написать программу для создания БД с неправильными глаголами. (2 дня.)
3.	Заполнить БД в соответствии с таблицей. (2 дня.)
4.	Провести позитивный и негативный тест. (1 день.)


Требования к приложению:

-Пользователь вводит слово на Английском, если слово является неправильным глаголом в одной из форм (Infinitive, Past Indefinite, Participle II), тогда происходит вывод глагола в Infinitive и его перевод;
- БД заполненная неправильными глаголами и их формой не должна быть видна пользователю;
- приложение создавать на базе языка программирования С++;
- курсовой проект должен быть выполнен и предъявлен преподавателю в срок до 17.12.2016.


Алгоритм работы:

При вводе слова программа ищет, есть ли такое слово в БД. Если есть, то выдает перевод его Infinitive и перевод. Если введенное пользователем слово не найдено в БД (или было введено вовсе не слово) – то программа выводит сообщение об ошибке. 










4
3.	Руководство пользователя

1.	Откройте файл verb.exe двойным нажатием на него.
2.	Выберите 4 пункт меню. Enter the verb (no more than 12 characters) – Введите глагол (не более 50 символов). На английском языке.
3.	Если введенное вами слово является неправильным глаголом, тогда отобразится Infinitive и перевод. 
4.	Далее программа предложит ввести ещё глаголы.
5.	Если введенное вами слово не неправильный глагол или вовсе не слово появится сообщение об ошибке. 
6.	Для выхода из программы требуется закрыть окно консоли или выбрать 0 пункт меню.























5

4.	Тесты

Программа прошла позитивный и негативный тест.

Во время позитивного на входные значения подавался неправильный глагол в 3 формах.
По выходу во всех 3х случаях программа выдала его Infinitive и перевод.

При прохождении негативного теста в входные значения подавался набор заглавных, строчный букв, цифр, символов. 
Программа вывела сообщение об ошибке и предложила попробовать ввести снова.

Оба теста пройдены успешно.



















6
5.	Проделанная студентами работа

Смородин Михаил

В данном курсовом проекте была создана много файловая программа по поиска неправильных глаголов в БД, также принимал участие в создании программу для составления (заполнения) БД. В программе использовались функции сравнения двух массивов(char), strcmp. Функция преобразования всех букв в строчные tolower. Также был использован принцип работы с бинарным файлом (БД).


Дуванова Мария

В данном курсовом проекте мной была предложена тема и идея того, как должна функционировать программа. Была заполнена база данных. Добавлены некоторые комментарии в коде. Составлен и редактирован отчет, т.е. документация к проекту.


Григорьев Дмитрий

В данной курсовой работе, мною как Тим лидом, было составлено техническое задание данного проекта со сроками реализации этапов ТЗ. 
Мною также был написан модульный тест, основной задачей которого было проверить работу главной функции по поиску глаголов в базе данных. Мною было проверенно 5 различных ситуаций, 4 из которых должны были пройти позитивный тест, и одна ситуация должна пройти негативный тест. Все тесты были пройдены, убедиться в этом лично можно запустив файл test1.exe.





7
6.	Заключение
В ходе выполнения данного курсового проекта было выявлено, что удобно использовать в разработке программного обеспечения Git и GitHub. Так как, при создании программы, её код приходится очень часто изменять. И возникает необходимость сохранять разные версии кода. Но сохранять каждую версию в отдельную папку на компьютере – не очень удобно, так как папок может в итоге получиться очень много. И они занимают много дискового пространства на компьютере. Кроме того, чтобы поделиться какой-либо папкой, то есть версией сохранения, нужно потратить время на поиск и копирование. А версия кода может не устроить другого разработчика. В то время, как другой разработчик может сам визуально, без чьей-либо помощь просматривать изменения в ходе разработки программы на GitHub.    
Так же важно разрабатывать программный продукт не в одиночку, а группой людей. При хорошо организованном подходе в групповой разработке ускоряется процесс создания программного обеспечения. Но при этом не нужно надеяться на то, что все сделает другой человек, а надо сразу пытаться принимать активное участие в создании программного обеспечения. Так как другие разработчики могут перестать взаимодействовать с не активным программистом. Ведь откладывание задач на потом, недостаточные теоретические знания и недостаток практики в программировании может застопорить весь проект, или создать негативное отношение к не активному разработчику. 
В ходе выполнения нашего курсового проекта все поставленные задачи были реализованы. Это видно, если сопоставить ТЗ и руководство пользователя. Работа была выполнена в срок до 17.12.2016.















8
